// tslint:disable
/**
 * Percival the Dragon Slayer CORE API
 * The API for accessing Percival the Dragon Slayer services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';
import {


    Format,
    FormatFromJSON,
    FormatToJSON,
    Sheet,
    SheetFromJSON,
    SheetToJSON,
} from './';


// thorapi

/**
 * Sheetster Workbook Spreadsheet
 * @export
 * @interface Workbook
 */
export type Workbook  = {
    /**
     * name of the workbook
     * @type {string}
     * @memberof Workbook
     */
    name?: string;
    /**
     * the sheets in the workbook
     * @type {Array<Sheet>}
     * @memberof Workbook
     */
    sheets?: Array<Sheet>;
    /**
     * the sheets in the workbook
     * @type {Array<Format>}
     * @memberof Workbook
     */
    formats?: Array<Format>;
    /**
     * 
     * @type {string}
     * @memberof Workbook
     */
    status?: WorkbookStatusEnum;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof Workbook
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof Workbook
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof Workbook
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof Workbook
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof Workbook
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof Workbook
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof Workbook
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof Workbook
     */
    lastModifiedDate?: Date;
}

export function WorkbookFromJSON(json: any): Workbook {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'sheets': !exists(json, 'sheets') ? undefined : (json['sheets'] as Array<any>).map(SheetFromJSON),
        'formats': !exists(json, 'formats') ? undefined : (json['formats'] as Array<any>).map(FormatFromJSON),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function WorkbookToJSON(value?: Workbook): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'sheets': value.sheets === undefined ? undefined : (value.sheets as Array<any>).map(SheetToJSON),
        'formats': value.formats === undefined ? undefined : (value.formats as Array<any>).map(FormatToJSON),
        'status': value.status,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum WorkbookStatusEnum {
    WORKBOOKOPEN = 'open',
    WORKBOOKCLOSED = 'closed',
    WORKBOOKARCHIVED = 'archived',
    WORKBOOKERROR = 'error',
    WORKBOOKINVALID = 'invalid'
}


