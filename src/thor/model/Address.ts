// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * TODO Address CLASS DESCRIPTION
 * @export
 * @interface Address
 */
export type Address  = {
    /**
     * full name of addressee
     * @type {string}
     * @memberof Address
     */
    name: string;
    /**
     * street address line 1
     * @type {string}
     * @memberof Address
     */
    street1: string;
    /**
     * full name of city
     * @type {string}
     * @memberof Address
     */
    city: string;
    /**
     * State of residence 2-character code (USA)
     * @type {string}
     * @memberof Address
     */
    state: string;
    /**
     * 5+4 digit zip code
     * @type {string}
     * @memberof Address
     */
    postalCode: string;
    /**
     * 
     * @type {boolean}
     * @memberof Address
     */
    hasWifi?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    principalId?: string;
    /**
     * The type of address
     * @type {string}
     * @memberof Address
     */
    addressType?: AddressAddressTypeEnum;
    /**
     * street address line 2
     * @type {string}
     * @memberof Address
     */
    street2?: string;
    /**
     * 3 character country code (upper case)
     * @type {string}
     * @memberof Address
     */
    country?: string;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof Address
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof Address
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof Address
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof Address
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof Address
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof Address
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof Address
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof Address
     */
    lastModifiedDate?: Date;
}

export function AddressFromJSON(json: any): Address {
    return {
        'name': json['name'],
        'street1': json['street1'],
        'city': json['city'],
        'state': json['state'],
        'postalCode': json['postal_code'],
        'hasWifi': !exists(json, 'hasWifi') ? undefined : json['hasWifi'],
        'principalId': !exists(json, 'principalId') ? undefined : json['principalId'],
        'addressType': !exists(json, 'addressType') ? undefined : json['addressType'],
        'street2': !exists(json, 'street2') ? undefined : json['street2'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function AddressToJSON(value?: Address): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'street1': value.street1,
        'city': value.city,
        'state': value.state,
        'postal_code': value.postalCode,
        'hasWifi': value.hasWifi,
        'principalId': value.principalId,
        'addressType': value.addressType,
        'street2': value.street2,
        'country': value.country,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum AddressAddressTypeEnum {
    HOME = 'home',
    MAIL = 'mail',
    WORK = 'work',
    SCHOOL = 'school',
    OTHER = 'other'
}


