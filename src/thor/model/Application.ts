// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';
import {


    ContentMediaLink,
    ContentMediaLinkFromJSON,
    ContentMediaLinkToJSON,
} from './';


// thorapi

/**
 * Application represents a logical system
 * @export
 * @interface Application
 */
export type Application  = {
    /**
     * name of the application
     * @type {string}
     * @memberof Application
     */
    name?: string;
    /**
     * detailed description of the application
     * @type {string}
     * @memberof Application
     */
    description?: string;
    /**
     * whether this Application is a Template
     * @type {boolean}
     * @memberof Application
     */
    isTemplate?: boolean;
    /**
     * type of application
     * @type {string}
     * @memberof Application
     */
    type?: ApplicationTypeEnum;
    /**
     * status for event
     * @type {string}
     * @memberof Application
     */
    status?: ApplicationStatusEnum;
    /**
     * the url to the \'homepage\' or service endpoint
     * @type {string}
     * @memberof Application
     */
    entrypointUrl?: string;
    /**
     * 
     * @type {Array<ContentMediaLink>}
     * @memberof Application
     */
    contentMedia?: Array<ContentMediaLink>;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof Application
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof Application
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof Application
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof Application
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof Application
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof Application
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof Application
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof Application
     */
    lastModifiedDate?: Date;
}

export function ApplicationFromJSON(json: any): Application {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'isTemplate': !exists(json, 'isTemplate') ? undefined : json['isTemplate'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'entrypointUrl': !exists(json, 'entrypointUrl') ? undefined : json['entrypointUrl'],
        'contentMedia': !exists(json, 'contentMedia') ? undefined : (json['contentMedia'] as Array<any>).map(ContentMediaLinkFromJSON),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function ApplicationToJSON(value?: Application): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'description': value.description,
        'isTemplate': value.isTemplate,
        'type': value.type,
        'status': value.status,
        'entrypointUrl': value.entrypointUrl,
        'contentMedia': value.contentMedia === undefined ? undefined : (value.contentMedia as Array<any>).map(ContentMediaLinkToJSON),
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum ApplicationTypeEnum {
    FULLSTACK = 'full-stack',
    AUTOMATION = 'automation',
    AGENT = 'agent',
    SERVICE = 'service',
    FRONTEND = 'front-end',
    MOBILE = 'mobile',
    CICD = 'ci-cd',
    LAMBDA = 'lambda'
}
/**
* @export
* @enum {string}
*/
export enum ApplicationStatusEnum {
    READY = 'ready',
    DEPLOYED = 'deployed',
    STAGING = 'staging',
    ERROR = 'error',
    DISABLED = 'disabled'
}


