// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';

// thorapi

/**
 * System backup configuration for backup jobs workstation and server
 * @export
 * @interface BackupConfig
 */
export type BackupConfig  = {
    /**
     * 
     * @type {string}
     * @memberof BackupConfig
     */
    name?: string;
    /**
     * source code only backup of test workspace
     * @type {string}
     * @memberof BackupConfig
     */
    description?: string;
    /**
     * basically a callback url
     * @type {string}
     * @memberof BackupConfig
     */
    remoteConfigUrl?: string;
    /**
     * the number of times this has been run before
     * @type {number}
     * @memberof BackupConfig
     */
    runNumber?: number;
    /**
     * 0-100 percentage of compleion of this backup if known
     * @type {number}
     * @memberof BackupConfig
     */
    percentComplete?: number;
    /**
     * the type of backup ie Workstation or Server
     * @type {string}
     * @memberof BackupConfig
     */
    type?: BackupConfigTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BackupConfig
     */
    priorityLevel?: BackupConfigPriorityLevelEnum;
    /**
     * path to the folder that will be backed up
     * @type {string}
     * @memberof BackupConfig
     */
    backupDir?: string;
    /**
     * path to the folder that will be backed up
     * @type {string}
     * @memberof BackupConfig
     */
    workingDir?: string;
    /**
     * a json string describing the items to skip in the backup set
     * @type {string}
     * @memberof BackupConfig
     */
    skiplist?: string;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof BackupConfig
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof BackupConfig
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof BackupConfig
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof BackupConfig
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof BackupConfig
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof BackupConfig
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof BackupConfig
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof BackupConfig
     */
    lastModifiedDate?: Date;
}

export function BackupConfigFromJSON(json: any): BackupConfig {
    return {
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'remoteConfigUrl': !exists(json, 'remoteConfigUrl') ? undefined : json['remoteConfigUrl'],
        'runNumber': !exists(json, 'runNumber') ? undefined : json['runNumber'],
        'percentComplete': !exists(json, 'percentComplete') ? undefined : json['percentComplete'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'priorityLevel': !exists(json, 'priorityLevel') ? undefined : json['priorityLevel'],
        'backupDir': !exists(json, 'backupDir') ? undefined : json['backupDir'],
        'workingDir': !exists(json, 'workingDir') ? undefined : json['workingDir'],
        'skiplist': !exists(json, 'skiplist') ? undefined : json['skiplist'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function BackupConfigToJSON(value?: BackupConfig): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'name': value.name,
        'description': value.description,
        'remoteConfigUrl': value.remoteConfigUrl,
        'runNumber': value.runNumber,
        'percentComplete': value.percentComplete,
        'type': value.type,
        'priorityLevel': value.priorityLevel,
        'backupDir': value.backupDir,
        'workingDir': value.workingDir,
        'skiplist': value.skiplist,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}

/**
* @export
* @enum {string}
*/
export enum BackupConfigTypeEnum {
    WORKSTATION = 'workstation',
    SERVER = 'server',
    DESKTOP = 'desktop',
    LAPTOP = 'laptop',
    DEVICE = 'device'
}
/**
* @export
* @enum {string}
*/
export enum BackupConfigPriorityLevelEnum {
    LOW = 'low',
    MEDIUM = 'medium',
    HIGH = 'high',
    CRITICAL = 'critical'
}


