// tslint:disable
/**
 * ValkyrAI CORE API
 * The API for accessing ValkyrAI services
 *
 * The version of the OpenAPI document: 0.9.25
 * Contact: info@valkyrlabs.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../src/runtime';
import {


    GoalDependency,
    GoalDependencyFromJSON,
    GoalDependencyToJSON,
    KeyMetric,
    KeyMetricFromJSON,
    KeyMetricToJSON,
} from './';


// thorapi

/**
 * A Strategic Goal
 * @export
 * @interface Goal
 */
export type Goal  = {
    /**
     * The strategic priority that this goal supports.
     * @type {string}
     * @memberof Goal
     */
    strategicPriorityId?: string;
    /**
     * the name of the goal
     * @type {string}
     * @memberof Goal
     */
    name?: string;
    /**
     * the description of the goal
     * @type {string}
     * @memberof Goal
     */
    description?: string;
    /**
     * measurements used to track success
     * @type {Array<KeyMetric>}
     * @memberof Goal
     */
    keyMetrics?: Array<KeyMetric>;
    /**
     * 
     * @type {Array<GoalDependency>}
     * @memberof Goal
     */
    goalDependencies?: Array<GoalDependency>;
    /**
     * the positive expected outcome of the goal
     * @type {string}
     * @memberof Goal
     */
    expectedOutcome?: string;
    /**
     * description of the risk if the goal is not successful
     * @type {string}
     * @memberof Goal
     */
    risks?: string;
    /**
     * 
     * @type {string}
     * @memberof Goal
     */
    timeline?: string;
    /**
     * Unique identifier for object in the system
     * @type {string}
     * @memberof Goal
     */
    id?: string;
    /**
     * UUID of owner of the object in the system
     * @type {string}
     * @memberof Goal
     */
    ownerId?: string;
    /**
     * Date of object creation
     * @type {Date}
     * @memberof Goal
     */
    createdDate?: Date;
    /**
     * Data, including hash of the key(s) used to encrypt this record.
     * @type {string}
     * @memberof Goal
     */
    keyHash?: string;
    /**
     * Last user to access object
     * @type {string}
     * @memberof Goal
     */
    lastAccessedById?: string;
    /**
     * Timestamp of last access of object
     * @type {Date}
     * @memberof Goal
     */
    lastAccessedDate?: Date;
    /**
     * Unique identifier for user who last modifed the object in the system
     * @type {string}
     * @memberof Goal
     */
    lastModifiedById?: string;
    /**
     * Date of last object modification
     * @type {Date}
     * @memberof Goal
     */
    lastModifiedDate?: Date;
}

export function GoalFromJSON(json: any): Goal {
    return {
        'strategicPriorityId': !exists(json, 'strategicPriorityId') ? undefined : json['strategicPriorityId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'keyMetrics': !exists(json, 'keyMetrics') ? undefined : (json['keyMetrics'] as Array<any>).map(KeyMetricFromJSON),
        'goalDependencies': !exists(json, 'goalDependencies') ? undefined : (json['goalDependencies'] as Array<any>).map(GoalDependencyFromJSON),
        'expectedOutcome': !exists(json, 'expectedOutcome') ? undefined : json['expectedOutcome'],
        'risks': !exists(json, 'risks') ? undefined : json['risks'],
        'timeline': !exists(json, 'timeline') ? undefined : json['timeline'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerId': !exists(json, 'ownerId') ? undefined : json['ownerId'],
        'createdDate': !exists(json, 'createdDate') ? undefined : new Date(json['createdDate']),
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'lastAccessedById': !exists(json, 'lastAccessedById') ? undefined : json['lastAccessedById'],
        'lastAccessedDate': !exists(json, 'lastAccessedDate') ? undefined : new Date(json['lastAccessedDate']),
        'lastModifiedById': !exists(json, 'lastModifiedById') ? undefined : json['lastModifiedById'],
        'lastModifiedDate': !exists(json, 'lastModifiedDate') ? undefined : new Date(json['lastModifiedDate']),
    };
}

export function GoalToJSON(value?: Goal): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'strategicPriorityId': value.strategicPriorityId,
        'name': value.name,
        'description': value.description,
        'keyMetrics': value.keyMetrics === undefined ? undefined : (value.keyMetrics as Array<any>).map(KeyMetricToJSON),
        'goalDependencies': value.goalDependencies === undefined ? undefined : (value.goalDependencies as Array<any>).map(GoalDependencyToJSON),
        'expectedOutcome': value.expectedOutcome,
        'risks': value.risks,
        'timeline': value.timeline,
        'id': value.id,
        'ownerId': value.ownerId,
        'createdDate': value.createdDate === undefined ? undefined : value.createdDate.toISOString(),
        'keyHash': value.keyHash,
        'lastAccessedById': value.lastAccessedById,
        'lastAccessedDate': value.lastAccessedDate === undefined ? undefined : value.lastAccessedDate.toISOString(),
        'lastModifiedById': value.lastModifiedById,
        'lastModifiedDate': value.lastModifiedDate === undefined ? undefined : value.lastModifiedDate.toISOString(),
    };
}


